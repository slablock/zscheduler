syntax = "proto3";

import "scalapb/scalapb.proto";

package com.github.slablock.zscheduler.server.actor.protos;

option (scalapb.options) = {
  scope: FILE
  flat_package: false
  single_file: true
  java_conversions: false
  lenses: false
  getters: false
  retain_source_code_info: false
  no_default_values_in_constructor: false
  preserve_unknown_fields: false
  enum_value_naming: CAMEL_CASE
  enum_strip_prefix: false
  no_primitive_wrappers: true
};


message ClientMsg {
    oneof sealed_value {
        ClusterInfo info = 1;
        Query query = 2;
        JobSubmitResp jobSubmitResp = 3;
        JobQueryStatusResp jobQueryStatusResp = 4;
        JobQueryLogResp jobQueryLogResp = 5;
    }
}


message ClusterInfo {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    string data = 1;
}

message Query {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    string id = 1;
}

message JobSubmitResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 jobId = 1;
}


message JobUpdateResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 jobId = 1;
}

message ProjectSubmitResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 projectId = 1;
}

message ProjectUpdateResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 projectId = 1;
}

message FlowSubmitResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 flowId = 1;
}

message FlowUpdateResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 flowId = 1;
}

message JobQueryStatusResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 jobId = 1;
    int32 status = 2;
}

message JobQueryLogResp {
    option (scalapb.message).extends = "com.github.slablock.zscheduler.server.actor.ClientActor.ClientCommand";
    int64 jobId = 1;
    int32 logType = 2;
    string log = 3;
}